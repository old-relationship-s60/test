クラスの基本
◆問題１　〜　クラスの作成（メンバ変数）


①Studentクラスを作成。
Studentクラスには、publicなメンバ変数として名前、身長、体重を登録できるものとする。
メンバ関数は持たないものとする。

②main関数内にて、太郎（身長175センチ、体重66キロ）、次郎（身長168センチ、体重72キロ）を登録し、
出力せよ。
　
【実行結果】

$ prac1 
taro = 太郎  175cm  66kg
jiro = 次郎  168cm  72kg
$

◆問題２　クラスの作成（メンバ関数）


①Studentクラスを作成。
Studentクラスには、privateなメンバ変数として名前、身長、体重を登録できるものとする。
メンバ変数にはメンバ関数にてアクセスするものとする。
②main関数内にて、コンストラクタにて太郎（身長175センチ、体重66キロ）、次郎（身長168センチ、体重72キロ）を登録し、
出力せよ。
　
【実行結果】

$ prac2
taro = 太郎  175cm  66kg
jiro = 次郎  168cm  72kg
$ 

◆問題３　クラスの作成（メンバ変数）

「２．クラスの作成（メンバ関数）」で作成したクラスをヘッダとソースに分けよ。
　
【実行結果】

$ prac3
taro = 太郎  175cm  66kg
jiro = 次郎  168cm  72kg
$ 

◆問題４　コピーコンストラクタ
下記の出力がされるように、①に当てはまる処理を答えよ。
　
【実行結果】

$ prac2
jiro = 次郎  168cm  72kg
$ 

　
【課題プログラム】

#include <iostream>
#include <string>

using namespace std;

class Student {
	private:
		string name;
		int height;
		int weight;
	public:
		Student(string name, int h, int w){
			this->name = name;
			height = h;
			weight = w;
		}
		string get_name(){
			return name;
		}
		int get_height(){
			return height;
		}
		int get_weight(){
			return weight;
		}
};

int main() {
	Student taro("太郎", 175, 66);
	＿＿＿①＿＿＿＿

	cout << "jiro = " << jiro.get_name() << "  " << jiro.get_height() << "cm  " << jiro.get_weight() << "kg" << endl;
}

◆問題5　引数とオブジェクト
①Studentクラスを作成。
Studentクラスには、privateなメンバ変数として名前、身長、体重を登録できるものとする。
メンバ変数にはメンバ関数にてアクセスするものとする。
②main関数内にて、コンストラクタにて太郎（身長175センチ、体重66キロ）、次郎（身長168センチ、体重72キロ）を登録する。
③Studentクラスとは関係ない独自のshow関数を作成し、②で設定した太郎と次郎の情報を出力せよ。
　
【実行結果】

$ prac5 
太郎  175cm  66kg
次郎  168cm  72kg
$ 

◆問題6　引数とオブジェクト(2)
関数にオブジェクトそのものではなく、ポインタを渡すことによって問題5を実現せよ。
　
【実行結果】

$ prac6
太郎  175cm  66kg
次郎  168cm  72kg
$ 
◆問題7　引数とオブジェクト(3)
関数にオブジェクトそのものではなく、ポインタを渡すことによって問題5を実現せよ。
　
【実行結果】

$ prac7 
太郎  175cm  66kg
次郎  168cm  72kg
$ 
◆演習問題1
X座標、Y座標をユーザ入力にて受け付け、入力された座標を最後に出力せよ。
（X座標、Y座標はそれぞれ0〜99までしか受け付けず、範囲外の場合は0を設定するものとする）
※ヒント：PointクラスにてX座標、Y座標を格納できるオブジェクトを生成し、独自のshow関数にて出力。
　
【実行結果】

$ train1
X座標を入力せよ。
4
Y座標を入力せよ。
6
座標は ( 4, 6 ) です。

$ train1
X座標を入力せよ。
103
Y座標を入力せよ。
45
座標は ( 0, 45 ) です。

$
